{"version":3,"sources":["components/UserDetails.js","components/PersonalDetails.js","components/Confirm.js","components/Success.js","components/MainForm.js","App.js","serviceWorker.js","index.js"],"names":["UserDetails","continue","e","preventDefault","props","nextStep","this","values","handleChange","Fragment","title","hintText","floatingLabelText","onChange","defaultValue","firstName","lastName","email","label","primary","style","styles","button","onClick","Component","margin","PersonalDetails","back","prevStep","occupation","company","city","bio","Confirm","List","primaryText","secondaryText","Success","MainForm","state","step","setState","input","target","value","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.11a79809.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\r\nimport AppBar from 'material-ui/AppBar'\r\nimport TextField from 'material-ui/TextField'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\nimport App from '../App'\r\n\r\n\r\nclass UserDetails extends Component {\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n    render() {\r\n        const {values, handleChange} = this.props;\r\n\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    <AppBar title=\"Enter User Details\"/>\r\n                    <TextField \r\n                        hintText = \"Enter First Name\"\r\n                        floatingLabelText =\"Firstname\"\r\n                        onChange = {handleChange('firstName')}\r\n                        defaultValue = {values.firstName}\r\n                    />\r\n                    <br/>\r\n                    <TextField \r\n                        hintText = \"Enter Last Name\"\r\n                        floatingLabelText =\"Lastname\"\r\n                        onChange = {handleChange('lastName')}\r\n                        defaultValue = {values.lastName}\r\n                    />\r\n                     <br/>\r\n                    <TextField \r\n                        hintText = \"Enter Email Address\"\r\n                        floatingLabelText =\"Email\"\r\n                        onChange = {handleChange('email')}\r\n                        defaultValue = {values.email}\r\n                    />\r\n                     <br/>\r\n                    <RaisedButton\r\n                        label = \"Continue\"\r\n                        primary = {true}\r\n                        style = {styles.button}\r\n                        onClick = {this.continue}\r\n                    />\r\n                    \r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: 15\r\n    }\r\n}\r\n\r\nexport default UserDetails;\r\n","import React, { Component } from 'react'\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\r\nimport AppBar from 'material-ui/AppBar'\r\nimport TextField from 'material-ui/TextField'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\nimport App from '../App'\r\n\r\nexport class PersonalDetails extends Component {\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n    render() {\r\n        const {values, handleChange} = this.props;\r\n\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    <AppBar title=\"Occupation\"/>\r\n                    <TextField \r\n                        hintText = \"Enter Occupation\"\r\n                        floatingLabelText =\"Occupation\"\r\n                        onChange = {handleChange('occupation')}\r\n                        defaultValue = {values.occupation}\r\n                    />\r\n                    <br/>\r\n                    <TextField \r\n                        hintText = \"Enter Company\"\r\n                        floatingLabelText =\"Company\"\r\n                        onChange = {handleChange('company')}\r\n                        defaultValue = {values.company}\r\n                    />\r\n                     <br/>\r\n                    <TextField \r\n                        hintText =\"Enter City\"\r\n                        floatingLabelText =\"city\"\r\n                        onChange = {handleChange('city')}\r\n                        defaultValue = {values.city}\r\n                    />\r\n                    <br/>\r\n                    <TextField \r\n                        hintText =\"Bio\"\r\n                        floatingLabelText =\"bio\"\r\n                        onChange = {handleChange('bio')}\r\n                        defaultValue = {values.bio}\r\n                    />\r\n                     <br/>\r\n                    <RaisedButton\r\n                        label = \"Continue\"\r\n                        primary = {true}\r\n                        style = {styles.button}\r\n                        onClick = {this.continue}\r\n                    />\r\n                    <RaisedButton\r\n                        label = \"Back\"\r\n                        primary = {false}\r\n                        style = {styles.button}\r\n                        onClick = {this.back}\r\n                    />\r\n                    \r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: 15\r\n    }\r\n}\r\n\r\n\r\nexport default PersonalDetails\r\n","import React, { Component } from 'react'\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\r\nimport AppBar from 'material-ui/AppBar'\r\nimport {List, ListItem} from 'material-ui/List'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\nimport App from '../App'\r\n\r\nexport class Confirm extends Component {\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n    render() {\r\n        const { values:{ firstName, lastName, email, occupation, company, city, bio } } = this.props;\r\n\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    <AppBar title=\"Confirm User Data\"/>\r\n                    <List>\r\n                        <ListItem\r\n                            primaryText = 'First Name'\r\n                            secondaryText = {firstName}\r\n                        />\r\n                        <ListItem\r\n                            primaryText = 'Last Name'\r\n                            secondaryText = {lastName}\r\n                        />\r\n                        <ListItem\r\n                            primaryText = 'Email'\r\n                            secondaryText = {email}\r\n                        />\r\n                        <ListItem\r\n                            primaryText = 'Ocupation'\r\n                            secondaryText = {occupation}\r\n                        />\r\n                        <ListItem\r\n                            primaryText = 'Company'\r\n                            secondaryText = {company}\r\n                        />\r\n                        <ListItem\r\n                            primaryText = 'City'\r\n                            secondaryText = {city}\r\n                        />\r\n                        <ListItem\r\n                            primaryText = 'Bio'\r\n                            secondaryText = {bio}\r\n                        />\r\n\r\n                      \r\n                    </List>\r\n                     <br/>\r\n                    <RaisedButton\r\n                        label = \"Confirm & Continue\"\r\n                        primary = {true}\r\n                        style = {styles.button}\r\n                        onClick = {this.continue}\r\n                    />\r\n                    <RaisedButton\r\n                        label = \"Back\"\r\n                        primary = {false}\r\n                        style = {styles.button}\r\n                        onClick = {this.back}\r\n                    />\r\n                    \r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: 15\r\n    }\r\n}\r\n\r\n\r\nexport default Confirm\r\n","import React, { Component } from 'react'\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\r\nimport AppBar from 'material-ui/AppBar'\r\nimport App from '../App'\r\n\r\nexport class Success extends Component {\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    <AppBar title=\"Success\"/>\r\n                    <h1>Thank You For Subscribing</h1>\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Success\r\n","import React, { Component } from 'react'\r\nimport UserDetails from './UserDetails';\r\nimport PersonalDetails from './PersonalDetails'\r\nimport Confirm from './Confirm'\r\nimport Success from './Success'\r\n\r\nexport default class MainForm extends Component {\r\n    state = {\r\n        step: 1,\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        occupation: '',\r\n        company: '',\r\n        city: '',\r\n        bio: ''\r\n    }\r\n    //Proceed to next Step\r\n    nextStep = () =>{\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        })\r\n    }\r\n    // Return To Previous Step\r\n    prevStep =() =>{\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        })\r\n    }\r\n    // Handle the change of fields\r\n    handleChange= input => e => {\r\n        this.setState({\r\n            [input] : e.target.value\r\n        })\r\n    }\r\n    render() {\r\n\r\n        const {step} = this.state;\r\n        const {firstName, lastName, email, occupation, company, city, bio} = this.state\r\n\r\n        const values = {firstName, lastName, email, occupation, company, city, bio}\r\n        \r\n        switch(step){\r\n            case 1:\r\n                return(\r\n                    <UserDetails\r\n                        nextStep = {this.nextStep}\r\n                        handleChange = {this.handleChange}\r\n                        values = {values}\r\n                    />\r\n                )\r\n            case 2: \r\n                return(\r\n                    <PersonalDetails\r\n                        nextStep = {this.nextStep}\r\n                        prevStep = {this.prevStep}\r\n                        handleChange = {this.handleChange}\r\n                        values = {values}\r\n                    />\r\n                    \r\n                )\r\n            case 3:\r\n                return(\r\n                    <Confirm\r\n                        nextStep = {this.nextStep}\r\n                        prevStep = {this.prevStep}\r\n                        values = {values}  \r\n                    />\r\n                    \r\n                )\r\n            case 4: \r\n                return <Success/>\r\n        }\r\n\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport UserDetails from './components/UserDetails';\nimport MainForm from './components/MainForm';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <MainForm/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}